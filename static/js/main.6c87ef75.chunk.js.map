{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","onClick","toggleMode","htmlFor","TextForm","useState","Text","setText","style","color","heading","value","onChange","e","target","backgroundColor","rows","newText","toLocaleUpperCase","toLocaleLowerCase","split","join","length","About","App","setmode","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c87ef75.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n                </div>\r\n                <div className={`form-check form-switch text-${props.mode==='dark'?\"light\":\"black\"}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\nNavbar.propTypes ={\r\n    title:PropTypes.string.isRequired,\r\n    about:PropTypes.string.isRequired\r\n}\r\n// Navbar.defaultProps={\r\n//     title:\"title\",\r\n//     about:\"about\"\r\n// }","import React, { \r\n    useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handelUpclick=()=>{\r\n        let newText= Text.toLocaleUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handelLowclick=()=>{\r\n        let newText= Text.toLocaleLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handelClearText=()=>{\r\n        let newText=''\r\n        setText(newText)\r\n    }\r\n    const handelExtraSpaces=()=>{\r\n        let newText=Text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const handelOnChange=(e)=>{\r\n        setText(e.target.value)\r\n    }\r\n    \r\n    const [Text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\" container mb-3\" style={{color: props.mode==='dark'?\"white\":\"black\"}}>\r\n        <label htmlFor=\"TextBox\" className=\"form-label h1\" >{props.heading}</label>\r\n        <textarea className=\"form-control my-3\" value={Text} onChange={handelOnChange} style={{backgroundColor: props.mode===\"dark\"?\"#393d41\":\"white\", color: props.mode==='dark'?\"white\":\"black\"}} id=\"TextBox\" rows=\"8\"></textarea>\r\n        <button type=\"button\" className=\"btn btn-info mx-1 my-1\" onClick={handelUpclick}>Convert into Uppercase</button>\r\n        <button type=\"button\" className=\"btn btn-success mx-1 my-1\" onClick={handelLowclick}>Convert into Lowercase</button>\r\n        <button type=\"button\" className=\"btn btn-warning mx-1 my-1\" onClick={handelExtraSpaces}>Clear Extra spaces</button>\r\n        <button type=\"button\" className=\"btn btn-danger mx-1 my-1\" onClick={handelClearText}>Clear Text</button>\r\n        </div>\r\n      \r\n        <div className=\"container\" style={{color: props.mode==='dark'?\"white\":\"black\"}}>\r\n            <h2>Your Text Summary</h2>\r\n           <p><strong> {Text.split(\" \").length}</strong> word & <strong>{Text.length}</strong> characters</p>\r\n           <p><strong> {0.008*Text.split(\" \").length}</strong> Minutes to read</p>\r\n           <br />\r\n          <h2>Text Preview</h2>\r\n          <p><em>{Text.length>0? Text: 'Enter text to Preview'}</em></p>\r\n        </div>\r\n       </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <>\r\n        <div >\r\n                <ul className=\"list-group\" >\r\n                <li className=\"list-group-item active text-center my-1\" aria-current=\"true\">About Us</li>\r\n                <li className=\"list-group-item\" style={{backgroundColor: props.mode===\"dark\"?\"#393d41\":\"white\", color: props.mode==='dark'?\"white\":\"black\"}}>Its a utility to modify your Text.</li>\r\n                <li className=\"list-group-item\" style={{backgroundColor: props.mode===\"dark\"?\"#393d41\":\"white\", color: props.mode==='dark'?\"white\":\"black\"}}>Copyright - TextUtil_Supratim2001</li>\r\n                </ul>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\n\n\nfunction App() {\n const [mode, setmode] = useState('light')\n const toggleMode=()=>{\n   if(mode==='light'){\n     setmode('dark')\n     document.body.style.backgroundColor=\"#393d41\"\n   }\n   else{\n     setmode('light')\n     document.body.style.backgroundColor=\"white\"\n   }\n }\n  return (\n      <>\n     <Router>\n      <Navbar title=\"My TextUtil\" about=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container\">\n         <Switch>\n          <Route path=\"/about\">\n            <About  mode={mode} />\n          </Route>\n          <Route path=\"/\">\n          <TextForm heading=\"Enter your Text Here to Analyze\" mode={mode}/>\n          </Route>\n        </Switch>\n      </div>\n    </Router> \n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}